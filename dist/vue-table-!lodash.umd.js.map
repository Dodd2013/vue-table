{"version":3,"file":"vue-table-!lodash.umd.js","sources":["../src/style.js","../src/vue-table-pagination.vue","../src/defaultOpt.config.js","../src/vue-table.vue","../src/vue-table-info.vue"],"sourcesContent":["const semantic = {\n    tableContainer: \"\",\n    table: \"ui celled teal table\",\n    pagination: \"ui pagination menu\",\n    paginationItem: \"item\",\n    paginationPre: \"icon item\",\n    paginationNext: \"icon item\",\n    paginationPreIcon: \"left chevron icon\",\n    paginationNextIcon: \"right chevron icon\"\n};\nconst bootstrap = {};\n\nexport default {\n    semantic,\n    bootstrap\n};","<template>\n    <div class='vue-table-pagination-component' :class=\"styles.pagination\">\n        <a class=\"\" @click=\"onPagesClick(currentPage - 1)\"\n           :class=\"[styles.paginationPre,{'disabled': currentPage === 1}]\">\n            <i class=\"\" :class=\"styles.paginationPreIcon\"></i>\n        </a>\n        <a class=\"\" v-for=\"index in pages\" @click=\"onPagesClick(index)\"\n           :class=\"[styles.paginationItem,{'active': currentPage === index }]\">{{ index }}</a>\n        <a class=\"\" @click=\"onPagesClick(currentPage + 1)\"\n           :class=\"[styles.paginationNext,{'disabled': currentPage === pageCount }]\">\n            <i class=\"\" :class=\"styles.paginationNextIcon\"></i>\n        </a>\n    </div>\n</template>\n\n<script>\n    import _ from 'lodash'\n\n    export default {\n        name: 'vue-table-pagination',\n        props: {\n            styles: {\n                type: Object\n            },\n            pagination: {\n                /**\n                 * e.g. {offset:0,total:30,size:10}\n                 */\n                type: Object,\n                default: function () {\n                    return {\n                        startPage: 0,\n                        total: 10,\n                        size: 10\n                    }\n                }\n            },\n            options: {\n                type: Object,\n                default: function () {\n                    return {}\n                }\n            }\n\n        },\n        data() {\n            return {\n                //1 based currentPage\n                currentPage: 1\n            }\n        },\n        methods: {\n            onPagesClick\n        },\n        computed: {\n            pageCount: function () {\n                return Math.ceil(this.pagination.total / this.pagination.size)\n            },\n            pages: function () {\n                return _.range(1, this.pageCount + 1)\n            },\n            offset: function () {\n                return (this.currentPage - 1) * this.pagination.size\n            }\n        },\n        mounted() {\n//            this.initPage()\n        }\n    }\n\n    /*******************************************\n     * methods\n     *******************************************/\n//    function initPage() {\n//        this.onPagesClick(this.pagination.startPage + 1)\n//    }\n\n    /**\n     * OnPagesClick\n     * @param index\n     */\n    function onPagesClick(index) {\n        if (index !== this.currentPage && index > 0 && index <= this.pageCount) {\n            this.currentPage = index\n            let pagination = {\n                current: this.currentPage,\n                size: this.pagination.size,\n                offset: this.offset\n            }\n            this.$emit('pageIndexChange', pagination)\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n","export default {\n    pagination: {\n        type: 'client',  //e.g. client server none\n        offset: 0,\n        size: 10\n    },\n    styleType: 'semantic', //e.g. semantic bootstrap\n    style: {},\n    undefinedText: '-',\n    striped: false\n}","<template>\n    <div class='vue-table-component' :class=\"style.component\">\n        <div class=\"vue-table-toolbar\" :class=\"style.toolbar\"></div>\n        <div class=\"vue-table-container\" :class=\"style.tableContainer\">\n            <table class=\"vue-table\" :class=\"[style.table,{'striped':opt.striped}]\">\n                <thead :class=\"style.thead\">\n                <!--<tr v-if=\"false\">-->\n                <!--<th :colspan=\"columnsTitle.length\">-->\n                <!--<div class=\"ui grid\">-->\n                <!--<div class=\"ten wide column\">-->\n                <!--<h1>Vue-Table</h1>-->\n                <!--</div>-->\n                <!--<div class=\"right aligned six wide column\">-->\n                <!--<div class=\"ui search\">-->\n                <!--<div class=\"ui icon input\">-->\n                <!--<input class=\"prompt\" type=\"text\" placeholder=\"Search countries...\">-->\n                <!--<i class=\"search icon\"></i>-->\n                <!--</div>-->\n                <!--<div class=\"results\"></div>-->\n                <!--</div>-->\n                <!--</div>-->\n                <!--</div>-->\n                <!--</th>-->\n                <!--</tr>-->\n                <tr>\n                    <th v-for=\"column in columnsTitle\">{{column}}</th>\n                </tr>\n                </thead>\n                <tbody :class=\"style.tbody\">\n                <tr v-for=\"row in displayRowData\">\n                    <td v-for=\"column in columnsName\">\n                        <span v-if=\"!column.isAction\"\n                              v-html=\"column.hasFormat ? column.format(row) : row[column.name]\"></span>\n                        <slot v-if=\"column.isAction\" name=\"action\" :row=\"row\"></slot>\n                    </td>\n                </tr>\n                </tbody>\n                <tfoot>\n                <tr>\n                    <th :colspan=\"columnsTitle.length\">\n                        <div class=\"ui grid\">\n                            <div class=\"six wide column\">\n\n                            </div>\n                            <div class=\"right aligned ten wide column\" v-if=\"opt.pagination.type!=='none'\">\n                                <vue-table-pagination :styles=\"style\" @pageIndexChange=\"onPageIndexChange\"\n                                                      :pagination=\"pagination\"></vue-table-pagination>\n                            </div>\n                        </div>\n                    </th>\n                </tr>\n                </tfoot>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    import style from './style.js'\n    import _ from 'lodash'\n    import vueTablePagination from './vue-table-pagination.vue'\n    import defaultOpt from './defaultOpt.config'\n\n    export default {\n        name: 'vue-table',\n        components: {\n            vueTablePagination\n        },\n        props: {\n            source: {\n                type: [Object, Function, Array]\n            },\n            columns: {\n                type: Array,\n                required: true\n            },\n            options: {\n                type: [Object],\n                default: () => {\n                    return {}\n                }\n            }\n        },\n        data() {\n            return {\n                opt: null,\n                style: null,\n                columnsTitle: null,\n                columnsName: null,\n                rowData: null,\n                serverParams: null,\n                mode: null,  //e.g. data, api, promise\n                pagination: null,\n                clientParams: null\n            }\n        },\n        computed: {\n            hasAction,\n            isClientPagination,\n            isServerPagination,\n            displayRowData\n        },\n        methods: {\n            refresh,\n            onPageIndexChange,\n            goToPageNum,\n            source2RowData,\n            initData,\n            initServerParams,\n            initClientParams,\n            onRefreshFinished,\n            getClientPaginationData\n\n        },\n        mounted,\n        beforeMount\n    }\n\n    /*******************************\n     * methods\n     *******************************/\n    function getClientPaginationData() {\n        return _.slice(this.rowData, this.clientParams.pagination.offset, this.clientParams.pagination.offset + this.pagination.size)\n    }\n\n    function onRefreshFinished(data) {\n        if (this.opt.pagination.type === 'client') {\n            this.pagination.total = data.length\n            this.rowData = data\n        }\n        if (this.opt.pagination.type === 'server') {\n            this.pagination.total = data.total\n            this.rowData = data.data\n        }\n    }\n\n    function onPageIndexChange(pagination) {\n        this.$emit('onPageIndexChange', pagination)\n        this.goToPageNum(pagination)\n    }\n\n    function goToPageNum(pagination) {\n        if (this.isServerPagination) {\n            this.serverParams.pagination = pagination\n            this.refresh()\n        }\n        if (this.isClientPagination) {\n            this.clientParams.pagination = pagination\n        }\n    }\n\n    function refresh() {\n        this.$emit('onRefreshBegin')\n        return this.source2RowData().then((data) => {\n            this.onRefreshFinished(data)\n            this.$emit('onRefreshFinished', data)\n        })\n    }\n\n    function initServerParams() {\n        let serverParams = {}\n        if (this.isServerPagination) {\n            serverParams.pagination = this.opt.pagination\n        }\n        return serverParams\n    }\n\n    function initClientParams() {\n        let clientParams = {}\n        if (this.isClientPagination) {\n            clientParams.pagination = this.opt.pagination\n        }\n        return clientParams\n    }\n\n    function initData() {\n        this.opt = _.merge({}, defaultOpt, this.options)\n        this.style = _.merge(this.opt.styleType ? style[this.opt.styleType] : {}, this.opt.style)\n        this.columnsTitle = this.columns.map((item) => (typeof item === 'string' ? item : (item.display || item.name)))\n        this.columnsName = this.columns.map((item) => {\n            return {\n                name: typeof item === 'string' ? item : item.name,\n                hasFormat: !!item.format,\n                isAction: !!item.action,\n                format: item.format\n            }\n        })\n        this.pagination = {\n            startPage: 0,\n            size: this.opt.pagination.size,\n            total: 1\n        }\n        this.mode = 'data'\n        this.serverParams = this.initServerParams()\n        this.clientParams = this.initClientParams()\n    }\n\n    /**\n     * Get rowData for source\n     * @param source\n     * @return {*}\n     */\n    function source2RowData() {\n        let source = this.source\n        let params = this.serverParams\n        if (source.apiUrl) {\n            // api mode\n            this.mode = 'api'\n            return sourceApiData(source, params)\n        } else if (typeof source === 'function') {\n            // promise mode\n            this.mode = 'promise'\n            return source(params)\n        } else if (typeof source === 'object') {\n            // data mode\n            this.mode = 'data'\n            return Promise.resolve(source)\n        }\n    }\n\n    /***********************\n     * mounted\n     ***********************/\n\n    function mounted() {\n        this.refresh()\n    }\n\n    /***********************\n     * beforeMount\n     ***********************/\n    function beforeMount() {\n        this.initData()\n    }\n\n    /***********************\n     * computed\n     ***********************/\n    function hasAction() {\n        return !!this.columns.find((item) => {\n            return item.action\n        })\n    }\n\n    function isClientPagination() {\n        return this.opt.pagination.type === 'client'\n    }\n\n    function isServerPagination() {\n        return this.opt.pagination.type === 'server'\n    }\n\n    function displayRowData() {\n        if (this.isClientPagination) {\n            return this.getClientPaginationData()\n        }\n        if (this.isServerPagination) {\n            return this.rowData\n        }\n    }\n\n    /**\n     * For api mode, we ues XMLHttpRequest to get data\n     * @param source\n     * @param params\n     * @return {Promise}\n     */\n    function sourceApiData(source, serverParams) {\n        return new Promise(function (resolve, reject) {\n\n            let httpRequest = null\n            let params = {\n                search: serverParams.search\n            }\n            if (serverParams.pagination) {\n                params.offset = serverParams.pagination.offset\n                params.size = serverParams.pagination.size\n            }\n\n            let paramsStr = []\n            let method = source.method.toUpperCase() || 'GET'\n\n            for (let key in params) {\n                if (params[key] !== null && typeof(params[key]) !== 'undefined') {\n                    paramsStr.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n                }\n\n            }\n\n            if (window.XMLHttpRequest) { // Mozilla, Safari, IE7+ ...\n                httpRequest = new XMLHttpRequest()\n            } else if (window.ActiveXObject) { // IE 6 and older\n                httpRequest = new ActiveXObject('Microsoft.XMLHTTP')\n            }\n\n            httpRequest.open(method, source.apiUrl + (method === 'GET' ? (source.apiUrl.indexOf('?') > -1 ? '&' : '?') + paramsStr.join('&') : ''))\n\n            httpRequest.setRequestHeader('Content-type', 'application/json')\n            for (let header in source.headers) {\n                httpRequest.setRequestHeader(header, source.headers[header])\n            }\n            httpRequest.onreadystatechange = function () {\n                if (httpRequest.readyState === XMLHttpRequest.DONE) {\n                    if (httpRequest.status === 200) {\n                        resolve(JSON.parse(httpRequest.responseText))\n                    } else {\n                        reject({msg: 'Error when get data form server!'})\n                    }\n                }\n            }\n\n            httpRequest.send(paramsStr.join('&'))\n        })\n    }\n\n</script>\n\n<style scoped>\n</style>\n","<template>\n    <div class='vue-table-info-component'>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'vue-table-info',\n        data() {\n            return {}\n        },\n        methods: {},\n        mounted() {}\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"names":["semantic","bootstrap","render","Object","Math","ceil","pagination","total","size","_","range","pageCount","currentPage","onPagesClick","index","offset","$emit","Function","Array","getClientPaginationData","slice","rowData","clientParams","onRefreshFinished","data","opt","type","length","onPageIndexChange","goToPageNum","isServerPagination","serverParams","refresh","isClientPagination","source2RowData","then","initServerParams","initClientParams","initData","merge","defaultOpt","options","style","styleType","columnsTitle","columns","map","item","display","name","columnsName","format","action","mode","source","params","apiUrl","sourceApiData","Promise","resolve","mounted","beforeMount","hasAction","find","displayRowData","reject","httpRequest","search","paramsStr","method","toUpperCase","key","push","encodeURIComponent","window","XMLHttpRequest","ActiveXObject","open","indexOf","join","setRequestHeader","header","headers","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","msg","send"],"mappings":"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"}